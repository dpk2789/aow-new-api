@page
@model IndexModel
@{
}
<h1>Companies</h1>
<a class="btn btn-success" asp-page="/Companies/Add">Add New Company</a>
<div id="product-main">
    <table class="table">
        <tr>
            <th>Id</th>
            <th>Product</th>

            <th></th>
        </tr>
        <tbody>
            @foreach (var product in Model.Companies)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => product.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => product.Name)
                    </td>

                    <td>
                        <a asp-route-id="@product.Id" asp-page="/Companies/Edit" class="fa fa-edit">Edit</a> |
                        <a asp-page="/MyBooks/Dashboard">My Books</a> |
                        <button onclick="confirmAction(event)" data-product-id="@product.Id" type="button" class="btn-danger small">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .loading-indicator:before {
        content: '';
        background: #000000cc;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 1000;
    }

    .loading-indicator:after {
        content: 'Loading';
        position: fixed;
        width: 100%;
        top: 50%;
        left: 0;
        z-index: 1001;
        color: white;
        text-align: center;
        font-weight: bold;
        font-size: 1.5rem;
    }
</style>
<script>
     var apiUrl = '@Model.ApiUrl';
        axios.interceptors.request.use(function (config) {

            // spinning start to show
            // UPDATE: Add this code to show global loading indicator
            document.body.classList.add('loading-indicator');


            return config
        }, function (error) {
            return Promise.reject(error);
        });

        axios.interceptors.response.use(function (response) {

            // spinning hide
            // UPDATE: Add this code to hide global loading indicator
            document.body.classList.remove('loading-indicator');

            return response;
        }, function (error) {
            return Promise.reject(error);
        });

    function confirmAction(e) {
        let confirmAction = confirm("Are you sure to delete this product?");
        if (confirmAction) {
            //  alert("Action successfully executed");
            removeProduct(e);
        } else {
            alert("Action canceled");
        }
    }

    var getProducts = function () {
        axios.get('/UserAccount/GetAdminProductsPartialView')
            .then(res => {
                var html = res.data;
                var el = document.getElementById('product-main');

                el.outerHTML = html;
            })
    }

    var removeProduct = function (e) {
        let productId = e.target.dataset.productId;
        let el = document.getElementById('userId');
        let userAccessToken = el.value;
        console.log(userAccessToken);


        axios.delete(apiUrl + "/api/Company/DeleteCompany?id=" + productId, {
            headers: {
                Authorization: "Bearer " + userAccessToken
            }
        })
            .then(res => {
                console.log(res);
                if (res.data.success) {
                    alert(res.data.msg)
                }
                getProducts();
            })
            .catch(err => {
                alert(err.error);
            })

    }
</script>