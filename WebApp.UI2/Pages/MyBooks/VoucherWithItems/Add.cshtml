@page
@model WebApp.UI2.Pages.MyBooks.VoucherWithItems.AddModel
@{
    var userId = User.Claims.FirstOrDefault(x => x.Type == "AcessToken").Value;
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>@Model.Input.VoucherName Form</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/MyBooks/JournalEntries/index">@string.Format(@Model.Input.VoucherName + "s")</a></li>
                        <li class="breadcrumb-item active">Add @Model.Input.VoucherName</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content-header -->

    <section class="content">
        <div class="container-fluid">
            <!-- SELECT2 EXAMPLE -->
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">Add @Model.Input.VoucherName</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">

                            @using (Html.BeginForm("Create", "VouchersWithItems", FormMethod.Post, new { id = "addPurchaseBill", @autocomplete = "off" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    <input type="hidden" value="@Model.Input.FinancialYearId" id="financialYearId" />
                                    <input type="hidden" id="VoucherName" value="@Model.Input.VoucherName" />
                                    <input type="hidden" value="@userId" id="userId" />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-row">
                                        <div class="form-group col-md-6">
                                            @Html.EditorFor(model => model.Input.LedgerName, new
                                        {
                                        htmlAttributes = new
                                        {
                                        @class = "ui-autocomplete-input form-control",
                                        @placeholder = "Enter Party Name",
                                        data_url = @Url.Action("GetLedgersForJournalEntry", "Vouchers")
                                        }
                                        })
                                            @Html.HiddenFor(c => c.Input.LedgerId)
                                            @Html.ValidationMessageFor(model => model.Input.LedgerName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-3">
                                            @Html.EditorFor(model => model.Input.VoucherNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Invoice" } })
                                            @Html.ValidationMessageFor(model => model.Input.VoucherNumber, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            <div class='input-group datetimepicker6'>
                                                <input type="text" class="form-control" name="Date" id="voucherDate" placeholder="Date"
                                                   data-toggle="datetimepicker" data-target="#voucherDate" autocomplete="off">
                                                @Html.ValidationMessageFor(model => model.Input.Date, "", new { @class = "text-danger" })
                                            </div>
                                            @*@Html.EditorFor(model => model.Date, "EditorDateJqueryDateTimePicker")*@
                                        </div>

                                    </div>
                                </div>


                                <div class="form-row" id="AddItems">
                                    <table class="table table-hover table-bordered table-responsive table-striped" style="height:400px">
                                        <tr>
                                            <td>S.No</td>
                                            <td>Item Name</td>
                                            <td>Description</td>
                                            <td>Amount</td>
                                            <td>Quantity</td>
                                            <td>Total</td>
                                        </tr>
                                        <tr>
                                            <td>
                                            </td>
                                            <td>
                                                <input type="text" id="txtStoreItem" class="ui-autocomplete-input form-control" data-url="@Url.Action("GetItemsForInvoice", "Vouchers")" placeholder="Enter Product" />
                                                <input type="hidden" id="hdnStoreItemId" class="form-control" />
                                                <input type="hidden" id="hdnProductId" class="form-control" />
                                                <input type="hidden" id="hdnProductAccountId" class="form-control" />
                                                <input type="hidden" id="hdnAccountCategoryName" class="form-control  hdnAccountCategoryName" />
                                                <input type="hidden" id="hdnItemType" class="form-control  hdnItemType" />
                                            </td>
                                            <td>
                                                <input type="text" id="txtDescription" class="form-control" placeholder="Description" />

                                            </td>
                                            <td>
                                                <input type="text" id="txtMRP" class="form-control" maxlength="7" placeholder="MRP" />
                                            </td>
                                            <td>
                                                <input type="text" id="txtQuantity" class="form-control" onchange="recalculateExtendedPrice()" placeholder="Quantity" />
                                            </td>
                                            <td>
                                                <input type="text" id="txtAmount" class="form-control  txtAmount" placeholder="Amount" value="0" />
                                                <input type="hidden" id="hdnAmount" class="form-control  hdnAmount" />
                                            </td>
                                            <td>
                                                <input id="btnAdd" type="button" value="Add" class="btn btn-primary btn-sm btnadd" />
                                                @*<a href="#" class="glyphicon glyphicon-pencil btnadd" id="btnadd" title="Add"></a>*@
                                                <a href="#" class="glyphicon glyphicon-edit btnupdate" id="btnupdate" title="Edit" style="display:none;"></a>
                                                <a href="#" class="glyphicon glyphicon-erase btnnew" id="btnnew" title="New" style="display:none;"></a>
                                            </td>
                                        </tr>
                                        <tbody id="tbodyitems" class="tbodyitems bordered"></tbody>
                                    </table>
                                    <input type="hidden" class="hdnProductsTotal" id="hdnProductsTotal" />

                                </div>

                                <div class="form-row" id="AddSundryAccount">
                                    <div class="col-md-5">
                                        @Html.TextAreaFor(model => model.Input.Note, new { id = "editor1", @class = "form-control", @placeholder = "Enter Note" })
                                        @*@Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Note" } })*@
                                        @Html.ValidationMessageFor(model => model.Input.Note, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-7">
                                        <table class="table table-bordered table-hover table-condensed  table-sm table-responsive table-striped" style="height:250px">
                                            <tr>
                                                <td>Account</td>
                                                <td>%</td>
                                                <td>Amount</td>
                                                <td></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <input type="text" id="txtSundryItem" class="ui-autocomplete-input form-control" data-url="@Url.Action("GetSundryItemForAutocomplete", "Purchase")" placeholder="Tax/Freight/Discount Account" />
                                                    <input type="hidden" id="hdnSundryAccountId" class="form-control" />
                                                    <input type="hidden" id="hdnSundryProductId" class="form-control" />
                                                    <input type="hidden" id="hdnSundryAccountCategoryName" class="form-control  hdnAccountCategoryName" />
                                                    <input type="hidden" id="hdnSundryItemType" class="form-control  hdnItemType" />
                                                </td>
                                                <td>
                                                    <input type="text" id="txtPercent" class="form-control  txtPercent" maxlength="7" placeholder="Debit Amount" value="0" />
                                                </td>
                                                <td>
                                                    <input type="text" id="txtDebit" class="form-control  txtDebit" maxlength="7" placeholder="Amount" value="0" />
                                                    <input type="hidden" id="hdnDebitAmount" class="form-control  hdnAmount" />
                                                </td>
                                                <td>
                                                    <input id="btnaccountadd" type="button" value="Add" class="btn btn-primary btn-sm btnaccountadd" />
                                                    @*<a class="glyphicon glyphicon-plus btnaccountadd" id="btnaccountadd" title="Add"></a>*@
                                                    <a class="fa fa-edit btnaccountupdate" id="btnaccountupdate" title="Edit" style="display:none;"></a>
                                                    <a class="fa fa-erase btnaccountnew" id="btnaccountnew" title="New" style="display:none;"></a>
                                                </td>
                                            </tr>
                                            <tbody id="tbodysundryitems" class="tbodysundryitems bordered"></tbody>
                                        </table>
                                        <input type="hidden" class="hdnSundryTotal" id="hdnSundryTotal" />
                                    </div>

                                    <div class="form-group col-md-3 offset-9">
                                        @Html.EditorFor(model => model.Input.Total, new { htmlAttributes = new { @class = "form-control", @placeholder = "Total" } })
                                        @Html.ValidationMessageFor(model => model.Input.Total, "", new { @class = "text-danger" })
                                    </div>


                                </div>

                            }

                        </div>

                    </div>
                    <!-- /.row -->
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <span>
                        <img id="loading" style="display: none;" src="~/gif/ajax-loader.gif" />
                    </span>
                    <button onclick="AddInvoice(event)" value="Save & Close" id="SaveClose" class="btn btn-info float-right" style="margin-left:20px">Save</button>
                    <button id="SaveNext" class="btn btn-default float-right">Cancel</button>
                </div>
            </div>
            <!-- /.card -->

        </div>
        <!-- /.container-fluid -->


    </section>

</div>

@section Scripts {
<script>
    $('#voucherDate').datetimepicker({
        /* format: 'L',*/
        format: 'YYYY/MM/DD'
    });
</script>
<script src="~/mysite/createAddUpdateDeleteItem.js"></script>
<script src="~/mysite/addupdatedeteteSundry.js"></script>
<script>
    var loading = $("#loading");
    $(document).on({
        ajaxStart: function () {
            loading.show();
        },
        ajaxStop: function () {
            loading.hide();
        }
    });

    function JsonDate(jsonDate) {
        if (!jsonDate) {
            return jsonDate;
        }
        //    var yojsonDate = (new Date()).toJSON();
        var date = new Date(parseInt(jsonDate.substr(6)));
        var hours = date.getHours();
        var ampm = hours >= 12 ? 'pm' : 'am';
        var month = date.getMonth() + 1;
        return date.getFullYear() + '/' + month + '/' + date.getDate() + " " + date.getHours() + ":" + date.getMinutes() + " " + ampm;
        //return yojsonDate;
    }

    $("#Input_LedgerName").autocomplete({
        minLength: 1,
        source: function (request, response) {
            var url = $(this.element).data("url");
            $.getJSON(url,
                { term: request.term },
                function (data) {
                    response(data)
                });
        },
        appendTo: $(".modal-body ui-autocomplete-input"),
        select: function (event, ui) {
            $("#Input_LedgerId").val(ui.item.id);
            $("#Input_LedgerName").val(ui.item.Name);
            $('#Input_VoucherNumber').focus()
        },
        change: function (event, ui) {
            if (!ui.item) {
                $(event.target).val("");
            }
        }

    });

    var addVoucherWithItemsRequest = {
        financialYearId: "string",
        voucherName: "string",
        data: "string",
        data2: "string",
        invoice: "string",
        termsDays: 0,
        accountId: "string",
        total: "string",
        note: "string",
        buttonValue: "string",
        date: "string"
    }

    function AddInvoice(e) {
        // let confirmAction = confirm("Are you sure to delete this product?");
        performPostRequest(e);
    }

    function performPostRequest(e) {
        e.preventDefault();
            e.preventDefault();
            let buttonValue = $(this).closest("input");
            let voucherId = $('.voucherId').val();
            let apiUrl = '@Model.ApiUrl';
            let date = $('#voucherDate').val();

            if (date == null || date == "") {
                alert("Please Enter Date");
                return false;
            }

            let OrderDetl = [];
            $('#tbodyitems tr').each(function () {
                let text = $(this).find("td").eq(4).html();
                if (text !== "Total") {

                    let Name = $(this).find("td").eq(1).text().trim();
                    //let Quantity = parseFloat($(this).find("td").eq(3).html()).toFixed(2);;
                    let ItemAmount = $(this).find(".hdnappendAmount").val();
                    let MRPPerUnit = $(this).find(".hdnappendMRP").val();
                    let Quantity = $(this).find(".hdnappendQuantity").val();
                    let ProductId = $(this).find(".hdnappendProductId").val();
                    let productLedgerId = $(this).find(".hdnappendProductAccountId").val();
                    let hdnAccountCategoryName = $(this).find(".hdnappendhdnAccountCategoryName").val();
                    let hdnappendhdnItemType = $(this).find(".hdnappendhdnItemType").val();
                    OrderDetl.push({
                        'Name': Name,
                        'ProductId': ProductId,
                        // 'ProductLedgerId': productLedgerId,
                        'MRPPerUnit': MRPPerUnit,
                        'Quantity': Quantity,
                        'ItemAmount': ItemAmount,
                        'AccountCategoryName': hdnAccountCategoryName,
                        'ItemType': hdnappendhdnItemType
                    });
                }
            });

            let sundryItems = [];
            $('#tbodysundryitems tr').each(function () {
                let text = $(this).find("td").eq(1).html();
                if (text != "Total") {
                    let sundtryItemId = $(this).find(".hdnappendSundryProductId").val();
                    let ledgerId = $(this).find(".hdnappendSundryAccountId").val();
                    let SundryAmount = $(this).find(".hdnappendSundryAmount").val();
                    let sundryPercent = $(this).find(".hdnappendSundryPercent").val();

                    sundryItems.push({
                        'ProductId': sundtryItemId,
                        'LedgerId': ledgerId,
                        'ItemAmount': SundryAmount,
                        'Percent': sundryPercent
                    });
                }
            });

            alert(JSON.stringify(sundryItems) + '  ' + sundryItems.length)

            let userId = document.getElementById('userId');
            let financialYearId = document.getElementById('financialYearId').value;
            let userAccessToken = userId.value;
            let voucherName = $('#VoucherName').val();
            $(".SaveOrder").attr("class", "btn btn-primary SaveOrder disabled");
            let form = $('#addPurchaseBill');
            let token = $('input[name="__RequestVerificationToken"]', form).val();
            let Invoice = $('#Input_VoucherNumber').val();
            let AccountId = $('#Input_LedgerId').val();
            let termsDays = $('#terms').val();
            let Note = $('#editor1').val();
            let Total = $('#Input_Total').val();
            addVoucherWithItemsRequest.financialYearId = financialYearId;
            addVoucherWithItemsRequest.accountId = AccountId;
            addVoucherWithItemsRequest.invoice = Invoice;
            addVoucherWithItemsRequest.date = date;
            addVoucherWithItemsRequest.voucherName = voucherName;
            addVoucherWithItemsRequest.data = JSON.stringify(OrderDetl);
            addVoucherWithItemsRequest.note = Note;
            addVoucherWithItemsRequest.total = Total;
            addVoucherWithItemsRequest.termsDays = termsDays;
            axios.post(`${apiUrl}/api/VoucherInvoice/AddVoucherInvoice`, this.addVoucherWithItemsRequest, {
                headers: {
                    Authorization: "Bearer " + userAccessToken
                }
            })
                .then(function (response) {
                    console.log(response);
                    if (response.data.success) {
                        toastr.success(response.data.description)
                        window.location.href = '/MyBooks/VoucherWithItems/index?voucherName=' + voucherName
                    } else {
                        toastr.error(response.data.description)
                    }
                })
                .catch(function (response) {
                    console.log(error);
                    toastr.error('Some Error Occur!!')
                });
        };
</script>
}


