@page
@model WebApp.UI2.Pages.MyBooks.Stock.CurrentStockModel
@{
    var userId = User.Claims.FirstOrDefault(x => x.Type == "AcessToken").Value;
}

<style>
    td.details-control {
        background: url(https://www.datatables.net/examples/resources/details_open.png) no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url(https://www.datatables.net/examples/resources/details_close.png) no-repeat center center;
    }
</style>
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Current Stock </h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Current Stock</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><a class="btn btn-success" asp-page="/MyBooks/ProductCategories/Add">Add New Product Category</a></h3>
                        </div>
                        <input type="hidden" value="@userId" id="userId" />
                        <!-- /.card-header -->
                        <div class="card-body" id="product-main">
                            @if (Model.CurrentStock != null)
                            {
                                <table id="productList" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Date</th>
                                            <th>VoucherNumber</th>
                                            <th>Name</th>
                                            <th>Quantity</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    @* <tbody>
                                        @{
                                        if (Model != null)
                                        {
                                        foreach (var product in Model.CurrentStock)
                                        {
                                        <tr>

                                        <td>
                                        @Html.DisplayFor(modelItem => product.Name)
                                        </td>
                                        <td>
                                        @Html.DisplayFor(modelItem => product.Quantity)
                                        </td>
                                        <td>
                                        <a asp-route-id="@product.Id" asp-page="/MyBooks/Products/Update" class="fa fa-edit">Edit</a> |
                                        <a asp-route-id="@product.Id" asp-page="/MyBooks/ProductVarients/Index" class="btn btn-sm btn-outline-primary">Varients</a> |
                                        <button onclick="confirmAction(event)" data-category-id="@product.Id" type="button" class="btn-danger small">Delete</button>
                                        </td>
                                        </tr>
                                        }
                                        }
                                        }

                                        </tbody>*@

                                </table>
                            }

                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            DataTableInit();           
        });

        function DataTableInit() {

            var table = $('#productList').DataTable({
                destroy: true,
                "ajax": '/Partials/GetCurrentStock',
                "columns": [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                    { "data": "date" },
                    { "data": "voucherNumber" },
                    { "data": "name" },
                    { "data": "quantity" },
                    {
                        'data': 'Options',
                        'render': function (data, type, row) {
                            let id = '"' + row.id + '"';
                            let hid = " <input type='hidden' class='hdnDailyId' value='" + row.id + "' />";
                            /**/
                            let update = "<a onclick='confirmAction(event)' data-stock-id=" + row.id + " type='button' class='btn btn-warning btn-sm' >Update</a>";
                            let delet = "<a onclick='confirmAction(event)' data-stock-id=" + row.id + " type='button' class='btn btn-danger btn-sm' style='margin-left: 10px'>Delete</a>";
                            /**/
                            return hid + update+ delet;
                        }
                    },
                ],                
            });

            // Add event listener for opening and closing details
            $('#productList tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });

            function format(d) {
                var tbl = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;" class="table table-hover table-striped table-condensed table-bordered tbldetl">';
                tbl += '<tr>';
                tbl += "<td>Name</td>";
                tbl += "<td>Quantity</td>";
                tbl += '</tr>';
                var flag = false;
                $.each(d.stockProductVariants, function (i) {
                    let Name = '';
                    let Quantity = '';
                    $.each(d.stockProductVariants[i], function (key, val) {
                        if (key == 'name') {
                            Name = val;
                        }
                        if (key == 'quantity') {
                            Quantity = val;
                        }
                    });
                    tbl += '<tr>';
                    tbl += '<td>' + Name + ' </td>';
                    tbl += '<td>' + Quantity + ' </td>';
                    tbl += '</tr>';
                    flag = true;
                });
                if (flag == false) {
                    tbl += '<tr>';
                    tbl += '<td colspan="11">No record found</td>';
                    tbl += '</tr>';
                }
                tbl + '</table>';
                return tbl;
            }
        }

        function confirmAction(e) {
            let confirmAction = confirm("Are you sure to delete this product?");
            if (confirmAction) {
                //  alert("Action successfully executed");
                removeProduct(e);
            } else {
                alert("Action canceled");
            }
        };
        var apiUrl = '@Model.ApiUrl';

        var removeProduct = function (e) {            
            let fyrId = e.target.dataset.stockId;
            let el = document.getElementById('userId');
            let userAccessToken = el.value;
            console.log(fyrId);

            axios.delete(apiUrl + "/api/Stocks/DeleteStock?id=" + fyrId, {
                headers: {
                    Authorization: "Bearer " + userAccessToken
                }
            }).then(res => {
                console.log(res);
                if (res.data.success) {
                    // alert(res.data.message)
                    toastr.success(res.data.message)
                }
                else {
                    toastr.error(res.data.message)
                }
                DataTableInit();
            })
                .catch(err => {
                    alert(err.error);
                })

        }

    </script>
}
