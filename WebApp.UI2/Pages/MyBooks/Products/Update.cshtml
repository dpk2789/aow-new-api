@page
@model WebApp.UI2.Pages.MyBooks.Products.UpdateModel
@{
    var userId = User.Claims.FirstOrDefault(x => x.Type == "AcessToken").Value;
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Update Product Form</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/MyBooks/Products/index">Product</a></li>
                        <li class="breadcrumb-item active">Update Product</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content-header -->

    <section class="content">
        <div class="container-fluid">
            <!-- SELECT2 EXAMPLE -->
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">Update Product</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <form method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="Input.Id" id="productId" />
                                <input type="hidden" value="@userId" id="userId" />
                                <div asp-validation-summary="All" class="text-danger"></div>
                                <div class="mb-3 row">
                                    <label class="col-sm-2 col-form-label">Select Category</label>
                                    <div class="col-sm-6">
                                        @Html.DropDownList("CategoryId", Model.Input.ProductCategorySelectList, "-Select Category-", new { id = "CategoryId", @class = "form-control" })

                                    </div>
                                    <span asp-validation-for="Input.Name" class="text-danger"></span>
                                </div>
                                <div class="mb-3 row">
                                    <label asp-for="Input.Name" class="col-sm-2 col-form-label"></label>
                                    <div class="col-sm-6">
                                        <input asp-for="Input.Name" class="form-control" />
                                    </div>
                                    <span asp-validation-for="Input.Name" class="text-danger"></span>
                                </div>

                            </form>

                        </div>
                        <button onclick="UpdateProduct(event)" class="btn btn-info float-right" >Update</button>
                        <button type="submit" class="btn btn-default float-right" style="margin-left:20px">Cancel</button>
                    </div>
                    <!-- /.row -->


                </div>
                <!-- /.card-body -->
              
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <h2>
                                <i class="fa fa-2x fa-cubes"></i>Item Variants
                                <a asp-route-id="@Model.Input.Id" class="btn btn-success float-right" asp-page="/MyBooks/ProductVarients/Add">Add Product Varient </a>
                            </h2>
                            @if (Model.Input.ProductVariants != null)
                            {
                                <partial name="_VarientsListPartial" model="@Model.Input.ProductVariants" />
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card -->

        </div>
        <!-- /.container-fluid -->


    </section>

</div>


@section scripts{
    @*<script src="~/js/product.js"></script>*@
<script>
    var apiUrl = '@Model.ApiUrl';

     function UpdateProduct(e) {
        // let confirmAction = confirm("Are you sure to delete this product?");
         performPostRequest(e);
     }

     var updateProductRequest = {
         id: "3fa85f64-5717-4562-b3fc-2c963f66afa6",
         name: "f1",
         productCategoryId: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
     };
     function performPostRequest(e) {
         let userId = document.getElementById('userId');
         let productId = document.getElementById('productId').value;
         let productName = document.getElementById('Input_Name').value;
         let categoryId = document.getElementById('CategoryId').value;
         updateProductRequest.name = productName;
         updateProductRequest.id = productId;
         updateProductRequest.productCategoryId = categoryId;
         let userAccessToken = userId.value;
         console.log(this.updateProductRequest);

         axios.put(`${apiUrl}/api/Products/UpdateProduct`, this.updateProductRequest, {
             headers: {
                 Authorization: "Bearer " + userAccessToken
             }
         })
              .then(function (response) {
                  console.log(response);
                  if (response.data.success) {
                      toastr.success(response.data.description)
                      window.location.href = '/MyBooks/Products/index'
                  } else {
                      toastr.error(response.data.description)
                  }
             })
             .catch(function (error) {
                 console.log(error);
                 toastr.error('Some Error Occur!!')
             });
         e.preventDefault();
     }
</script>
<script>
    var apiUrl = '@Model.ApiUrl';
    $(function () {
        DataTableInit();
    });

    function DataTableInit() {
        $("#VarientsTable").DataTable({"pageLength": 50,
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#VarientsTable_wrapper .col-md-6:eq(0)');
    }

    function confirmAction(e) {
        let confirmAction = confirm("Are you sure to delete this varient?");
        if (confirmAction) {
            //  alert("Action successfully executed");
            removeProduct(e);
        } else {
            alert("Action canceled");
        }
    };

    var getVarients = function () {
        let productId = document.getElementById('productId').value;
         axios.get('/Partials/GetVarientsByProductPartialView?id=' + productId)
            .then(res => {
                var html = res.data;
                var el = document.getElementById('resultTable');
                el.outerHTML = html;
                DataTableInit();
                console.log(res);
            })
    }

    var removeProduct = function (e) {
        let varientId = e.target.dataset.varientId;
        let el = document.getElementById('userId');
        let userAccessToken = el.value;
        console.log(varientId);

        axios.delete(apiUrl + "/api/ProductVarients/DeleteProductVarient?id=" + varientId, {
            headers: {
                Authorization: "Bearer " + userAccessToken
            }
        }).then(res => {
            console.log(res);
            if (res.data.success) {
                toastr.success(res.data.message)
            }
            getVarients();
        })
            .catch(err => {
                alert(err.error);
            })

    }

</script>
}