@page
@model WebApp.UI2.Pages.MyBooks.Products.IndexModel
@{
    var userId = User.Claims.FirstOrDefault(x => x.Type == "AcessToken").Value;
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Products </h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Product </li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><a class="btn btn-success" asp-page="/MyBooks/Products/Add">Add New Product </a></h3>
                        </div>
                        <input type="hidden" value="@userId" id="userId" />
                        <!-- /.card-header -->
                        <div class="card-body" id="product-main">
                            @if (Model.Products != null)
                            {
                                <partial name="_ProductsListPartial" model="@Model.Products" />
                            }

                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section scripts{
    <script>
        var apiUrl = '@Model.ApiUrl';
        $(function () {
            DataTableInit();
        });

        function DataTableInit() {
            $("#productList").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#productList_wrapper .col-md-6:eq(0)');
        }

        function confirmAction(e) {
            let confirmAction = confirm("Are you sure to delete this product?");
            if (confirmAction) {
                //  alert("Action successfully executed");
                removeProduct(e);
            } else {
                alert("Action canceled");
            }
        };

        var getProducts = function () {
            axios.get('/Partials/GetProductsPartialView')
                .then(res => {
                    var html = res.data;
                    var el = document.getElementById('resultTable');
                    el.outerHTML = html;
                    DataTableInit();
                    console.log(res);
                })
        }

        var removeProduct = function (e) {
            let fyrId = e.target.dataset.categoryId;
            let el = document.getElementById('userId');
            let userAccessToken = el.value;
            console.log(fyrId);

            axios.delete(apiUrl + "/api/Products/DeleteProduct?id=" + fyrId, {
                headers: {
                    Authorization: "Bearer " + userAccessToken
                }
            }).then(res => {
                console.log(res);
                if (res.data.success) {
                   // alert(res.data.message)
                    toastr.success(res.data.message)
                }
                getProducts();
            })
                .catch(err => {
                    alert(err.error);
                })

        }

    </script>
}